{
	"realm": "school-domain",
	"enabled": true,
	"accessTokenLifespan": 60,
	"accessCodeLifespan": 60,
	"accessCodeLifespanUserAction": 300,
	"ssoSessionIdleTimeout": 600,
	"ssoSessionMaxLifespan": 36000,
	"sslRequired": "none",
	"registrationAllowed": true,
	"resetPasswordAllowed": true,
	"editUsernameAllowed": true,
	"loginWithEmailAllowed": false,
	"duplicateEmailsAllowed": true,
	"rememberMe": true,
	"privateKey": "MIICXAIBAAKBgQCrVrCuTtArbgaZzL1hvh0xtL5mc7o0NqPVnYXkLvgcwiC3BjLGw1tGEGoJaXDuSaRllobm53JBhjx33UNv+5z/UMG4kytBWxheNVKnL6GgqlNabMaFfPLPCF8kAgKnsi79NMo+n6KnSY8YeUmec/p2vjO2NjsSAVcWEQMVhJ31LwIDAQABAoGAfmO8gVhyBxdqlxmIuglbz8bcjQbhXJLR2EoS8ngTXmN1bo2L90M0mUKSdc7qF10LgETBzqL8jYlQIbt+e6TH8fcEpKCjUlyq0Mf/vVbfZSNaVycY13nTzo27iPyWQHK5NLuJzn1xvxxrUeXI6A2WFpGEBLbHjwpx5WQG9A+2scECQQDvdn9NE75HPTVPxBqsEd2z10TKkl9CZxu10Qby3iQQmWLEJ9LNmy3acvKrE3gMiYNWb6xHPKiIqOR1as7L24aTAkEAtyvQOlCvr5kAjVqrEKXalj0Tzewjweuxc0pskvArTI2Oo070h65GpoIKLc9jf+UA69cRtquwP93aZKtW06U8dQJAF2Y44ks/mK5+eyDqik3koCI08qaC8HYq2wVl7G2QkJ6sbAaILtcvD92ToOvyGyeE0flvmDZxMYlvaZnaQ0lcSQJBAKZU6umJi3/xeEbkJqMfeLclD27XGEFoPeNrmdx0q10Azp4NfJAY+Z8KRyQCR2BEG+oNitBOZ+YXF9KCpH3cdmECQHEigJhYg+ykOvr1aiZUMFT72HU0jnmQe2FVekuG+LJUt2Tm7GtMjTFoGpf0JwrVuZN39fOYAlo+nTixgeW7X8Y=",
	"publicKey": "MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQCrVrCuTtArbgaZzL1hvh0xtL5mc7o0NqPVnYXkLvgcwiC3BjLGw1tGEGoJaXDuSaRllobm53JBhjx33UNv+5z/UMG4kytBWxheNVKnL6GgqlNabMaFfPLPCF8kAgKnsi79NMo+n6KnSY8YeUmec/p2vjO2NjsSAVcWEQMVhJ31LwIDAQAB",
	"requiredCredentials": [
		"password"
	],
	"defaultGroups": [
		"/pupil"
	],
	"users": [
		{
			"username": "root",
			"enabled": true,
			"email": "school@vige.it",
			"attributes": {
				"income": "",
				"room": "",
				"school": ""
			},
			"credentials": [
				{
					"type": "password",
					"value": "gtn"
				}
			],
			"groups": [
				"admin"
			]
		}
	],
	"clients": [
		{
			"clientId": "realm-management",
			"authorizationServicesEnabled": true
		},
		{
			"clientId": "school",
			"rootUrl": "http://MAVEN_REPLACER_SCHOOL_SERVER_URL:8080/school",
			"enabled": true,
			"redirectUris": [
				"http://MAVEN_REPLACER_SCHOOL_SERVER_URL:8080/school/*"
			],
			"webOrigins": [
				"http://MAVEN_REPLACER_SCHOOL_SERVER_URL:8080"
			],
			"publicClient": false,
			"secret": "bce5816d-98c4-404f-a18d-bcc5cb005c79",
			"serviceAccountsEnabled": true,
			"authorizationServicesEnabled": true,
			"authorizationSettings": {
				"allowRemoteResourceManagement": true,
				"policyEnforcementMode": "ENFORCING",
				"resources": [
					{
						"name": "Default Resource",
						"type": "urn:school:resources:default",
						"ownerManagedAccess": false,
						"attributes": {
							
						},
						"_id": "c338b2be-da73-471c-9bb0-77ad52e1f88f",
						"uris": [
							"/*"
						]
					}
				],
				"policies": [
					{
						"id": "edb01393-180e-4d95-afd3-92b3ac5a6d41",
						"name": "Default Policy",
						"description": "A policy that grants access only for users within this realm",
						"type": "js",
						"logic": "POSITIVE",
						"decisionStrategy": "AFFIRMATIVE",
						"config": {
							"code": "// by default, grants any permission associated with this policy\n$evaluation.grant();\n"
						}
					},
					{
						"id": "1f5dce97-54e3-4dcf-92bd-a2a59120286f",
						"name": "Default Permission",
						"description": "A permission that applies to the default resource type",
						"type": "resource",
						"logic": "POSITIVE",
						"decisionStrategy": "UNANIMOUS",
						"config": {
							"defaultResourceType": "urn:school:resources:default",
							"applyPolicies": "[\"Default Policy\"]"
						}
					}
				],
				"scopes": []
			}
		}
	],
	"roles": {
		"realm": [
			{
				"name": "admin",
				"description": "Administrator privileges"
			},
			{
				"name": "schooloperator",
				"description": "School Operator privileges"
			},
			{
				"name": "teacher",
				"description": "Teacher privileges"
			},
			{
				"name": "pupil",
				"description": "Pupil privileges"
			}
		]
	},
	"groups": [
		{
			"name": "admin",
			"path": "/admin",
			"attributes": {
				
			},
			"realmRoles": [
				"admin"
			],
			"clientRoles": {
				"realm-management": [
					"manage-users",
					"view-clients",
					"view-realm"
				],
				"account": [
					"manage-account"
				]
			},
			"subGroups": []
		},
		{
			"name": "pupil",
			"path": "/pupil",
			"attributes": {
				
			},
			"realmRoles": [
				"pupil"
			],
			"clientRoles": {
				"realm-management": [
					"view-users"
				],
				"account": [
					"manage-account"
				]
			},
			"subGroups": []
		},
		{
			"name": "schooloperator",
			"path": "/schooloperator",
			"attributes": {
				
			},
			"realmRoles": [
				"schooloperator"
			],
			"clientRoles": {
				"realm-management": [
					"view-users"
				],
				"account": [
					"manage-account"
				]
			},
			"subGroups": []
		},
		{
			"name": "teacher",
			"path": "/teacher",
			"attributes": {
				
			},
			"realmRoles": [
				"teacher"
			],
			"clientRoles": {
				"realm-management": [
					"view-users"
				],
				"account": [
					"manage-account"
				]
			},
			"subGroups": []
		}
	],
	"authenticationFlows": [
		{
			"alias": "Handle Existing Account",
			"description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
			"providerId": "basic-flow",
			"topLevel": false,
			"builtIn": true,
			"authenticationExecutions": [
				{
					"authenticator": "idp-confirm-link",
					"requirement": "REQUIRED",
					"priority": 10,
					"userSetupAllowed": false,
					"autheticatorFlow": false
				},
				{
					"authenticator": "idp-email-verification",
					"requirement": "ALTERNATIVE",
					"priority": 20,
					"userSetupAllowed": false,
					"autheticatorFlow": false
				},
				{
					"requirement": "ALTERNATIVE",
					"priority": 30,
					"flowAlias": "Verify Existing Account by Re-authentication",
					"userSetupAllowed": false,
					"autheticatorFlow": true
				}
			]
		},
		{
			"alias": "Verify Existing Account by Re-authentication",
			"description": "Reauthentication of existing account",
			"providerId": "basic-flow",
			"topLevel": false,
			"builtIn": true,
			"authenticationExecutions": [
				{
					"authenticator": "idp-username-password-form",
					"requirement": "REQUIRED",
					"priority": 10,
					"userSetupAllowed": false,
					"autheticatorFlow": false
				},
				{
					"authenticator": "auth-otp-form",
					"requirement": "OPTIONAL",
					"priority": 20,
					"userSetupAllowed": false,
					"autheticatorFlow": false
				}
			]
		},
		{
			"alias": "browser",
			"description": "browser based authentication",
			"providerId": "basic-flow",
			"topLevel": true,
			"builtIn": true,
			"authenticationExecutions": [
				{
					"authenticator": "auth-cookie",
					"requirement": "ALTERNATIVE",
					"priority": 10,
					"userSetupAllowed": false,
					"autheticatorFlow": false
				},
				{
					"authenticator": "auth-spnego",
					"requirement": "DISABLED",
					"priority": 20,
					"userSetupAllowed": false,
					"autheticatorFlow": false
				},
				{
					"authenticator": "identity-provider-redirector",
					"requirement": "ALTERNATIVE",
					"priority": 25,
					"userSetupAllowed": false,
					"autheticatorFlow": false
				},
				{
					"requirement": "ALTERNATIVE",
					"priority": 30,
					"flowAlias": "forms",
					"userSetupAllowed": false,
					"autheticatorFlow": true
				}
			]
		},
		{
			"alias": "clients",
			"description": "Base authentication for clients",
			"providerId": "client-flow",
			"topLevel": true,
			"builtIn": true,
			"authenticationExecutions": [
				{
					"authenticator": "client-secret",
					"requirement": "ALTERNATIVE",
					"priority": 10,
					"userSetupAllowed": false,
					"autheticatorFlow": false
				},
				{
					"authenticator": "client-jwt",
					"requirement": "ALTERNATIVE",
					"priority": 20,
					"userSetupAllowed": false,
					"autheticatorFlow": false
				},
				{
					"authenticator": "client-secret-jwt",
					"requirement": "ALTERNATIVE",
					"priority": 30,
					"userSetupAllowed": false,
					"autheticatorFlow": false
				},
				{
					"authenticator": "client-x509",
					"requirement": "ALTERNATIVE",
					"priority": 40,
					"userSetupAllowed": false,
					"autheticatorFlow": false
				}
			]
		},
		{
			"alias": "direct grant",
			"description": "OpenID Connect Resource Owner Grant",
			"providerId": "basic-flow",
			"topLevel": true,
			"builtIn": true,
			"authenticationExecutions": [
				{
					"authenticator": "direct-grant-validate-username",
					"requirement": "REQUIRED",
					"priority": 10,
					"userSetupAllowed": false,
					"autheticatorFlow": false
				},
				{
					"authenticator": "direct-grant-validate-password",
					"requirement": "REQUIRED",
					"priority": 20,
					"userSetupAllowed": false,
					"autheticatorFlow": false
				},
				{
					"authenticator": "direct-grant-validate-otp",
					"requirement": "OPTIONAL",
					"priority": 30,
					"userSetupAllowed": false,
					"autheticatorFlow": false
				}
			]
		},
		{
			"alias": "docker auth",
			"description": "Used by Docker clients to authenticate against the IDP",
			"providerId": "basic-flow",
			"topLevel": true,
			"builtIn": true,
			"authenticationExecutions": [
				{
					"authenticator": "docker-http-basic-authenticator",
					"requirement": "REQUIRED",
					"priority": 10,
					"userSetupAllowed": false,
					"autheticatorFlow": false
				}
			]
		},
		{
			"alias": "first broker login",
			"description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
			"providerId": "basic-flow",
			"topLevel": true,
			"builtIn": true,
			"authenticationExecutions": [
				{
					"authenticatorConfig": "review profile config",
					"authenticator": "idp-review-profile",
					"requirement": "REQUIRED",
					"priority": 10,
					"userSetupAllowed": false,
					"autheticatorFlow": false
				},
				{
					"authenticatorConfig": "create unique user config",
					"authenticator": "idp-create-user-if-unique",
					"requirement": "ALTERNATIVE",
					"priority": 20,
					"userSetupAllowed": false,
					"autheticatorFlow": false
				},
				{
					"requirement": "ALTERNATIVE",
					"priority": 30,
					"flowAlias": "Handle Existing Account",
					"userSetupAllowed": false,
					"autheticatorFlow": true
				}
			]
		},
		{
			"alias": "forms",
			"description": "Username, password, otp and other auth forms.",
			"providerId": "basic-flow",
			"topLevel": false,
			"builtIn": true,
			"authenticationExecutions": [
				{
					"authenticator": "auth-username-password-form",
					"requirement": "REQUIRED",
					"priority": 10,
					"userSetupAllowed": false,
					"autheticatorFlow": false
				},
				{
					"authenticator": "auth-otp-form",
					"requirement": "OPTIONAL",
					"priority": 20,
					"userSetupAllowed": false,
					"autheticatorFlow": false
				}
			]
		},
		{
			"alias": "http challenge",
			"description": "An authentication flow based on challenge-response HTTP Authentication Schemes",
			"providerId": "basic-flow",
			"topLevel": true,
			"builtIn": true,
			"authenticationExecutions": [
				{
					"authenticator": "no-cookie-redirect",
					"requirement": "REQUIRED",
					"priority": 10,
					"userSetupAllowed": false,
					"autheticatorFlow": false
				},
				{
					"authenticator": "basic-auth",
					"requirement": "REQUIRED",
					"priority": 20,
					"userSetupAllowed": false,
					"autheticatorFlow": false
				},
				{
					"authenticator": "basic-auth-otp",
					"requirement": "DISABLED",
					"priority": 30,
					"userSetupAllowed": false,
					"autheticatorFlow": false
				},
				{
					"authenticator": "auth-spnego",
					"requirement": "DISABLED",
					"priority": 40,
					"userSetupAllowed": false,
					"autheticatorFlow": false
				}
			]
		},
		{
			"alias": "registration",
			"description": "registration flow",
			"providerId": "basic-flow",
			"topLevel": true,
			"builtIn": true,
			"authenticationExecutions": [
				{
					"authenticator": "registration-page-form",
					"requirement": "REQUIRED",
					"priority": 10,
					"flowAlias": "registration form",
					"userSetupAllowed": false,
					"autheticatorFlow": true
				}
			]
		},
		{
			"alias": "registration form",
			"description": "registration form",
			"providerId": "form-flow",
			"topLevel": false,
			"builtIn": true,
			"authenticationExecutions": [
				{
					"authenticator": "registration-user-creation",
					"requirement": "REQUIRED",
					"priority": 20,
					"userSetupAllowed": false,
					"autheticatorFlow": false
				},
				{
					"authenticator": "registration-profile-action",
					"requirement": "REQUIRED",
					"priority": 40,
					"userSetupAllowed": false,
					"autheticatorFlow": false
				},
				{
					"authenticator": "registration-password-action",
					"requirement": "REQUIRED",
					"priority": 50,
					"userSetupAllowed": false,
					"autheticatorFlow": false
				},
				{
					"authenticator": "registration-recaptcha-action",
					"requirement": "DISABLED",
					"priority": 60,
					"userSetupAllowed": false,
					"autheticatorFlow": false
				}
			]
		},
		{
			"alias": "reset credentials",
			"description": "Reset credentials for a user if they forgot their password or something",
			"providerId": "basic-flow",
			"topLevel": true,
			"builtIn": true,
			"authenticationExecutions": [
				{
					"authenticator": "reset-credentials-choose-user",
					"requirement": "REQUIRED",
					"priority": 10,
					"userSetupAllowed": false,
					"autheticatorFlow": false
				},
				{
					"authenticator": "reset-credential-email",
					"requirement": "REQUIRED",
					"priority": 20,
					"userSetupAllowed": false,
					"autheticatorFlow": false
				},
				{
					"authenticator": "reset-password",
					"requirement": "REQUIRED",
					"priority": 30,
					"userSetupAllowed": false,
					"autheticatorFlow": false
				},
				{
					"authenticator": "reset-otp",
					"requirement": "OPTIONAL",
					"priority": 40,
					"userSetupAllowed": false,
					"autheticatorFlow": false
				}
			]
		},
		{
			"alias": "rooms",
			"description": "registration flow",
			"providerId": "basic-flow",
			"topLevel": true,
			"builtIn": false,
			"authenticationExecutions": [
				{
					"authenticator": "registration-page-form",
					"requirement": "REQUIRED",
					"priority": 10,
					"flowAlias": "rooms registration form",
					"userSetupAllowed": false,
					"autheticatorFlow": true
				}
			]
		},
		{
			"alias": "rooms registration form",
			"description": "registration form",
			"providerId": "form-flow",
			"topLevel": false,
			"builtIn": false,
			"authenticationExecutions": [
				{
					"authenticator": "registration-user-creation",
					"requirement": "REQUIRED",
					"priority": 20,
					"userSetupAllowed": false,
					"autheticatorFlow": false
				},
				{
					"authenticator": "registration-profile-action",
					"requirement": "REQUIRED",
					"priority": 40,
					"userSetupAllowed": false,
					"autheticatorFlow": false
				},
				{
					"authenticator": "registration-password-action",
					"requirement": "REQUIRED",
					"priority": 50,
					"userSetupAllowed": false,
					"autheticatorFlow": false
				},
				{
					"authenticator": "registration-recaptcha-action",
					"requirement": "DISABLED",
					"priority": 60,
					"userSetupAllowed": false,
					"autheticatorFlow": false
				},
				{
					"authenticator": "rooms-schools-creation",
					"requirement": "REQUIRED",
					"priority": 61,
					"userSetupAllowed": false,
					"autheticatorFlow": false
				}
			]
		},
		{
			"alias": "saml ecp",
			"description": "SAML ECP Profile Authentication Flow",
			"providerId": "basic-flow",
			"topLevel": true,
			"builtIn": true,
			"authenticationExecutions": [
				{
					"authenticator": "http-basic-authenticator",
					"requirement": "REQUIRED",
					"priority": 10,
					"userSetupAllowed": false,
					"autheticatorFlow": false
				}
			]
		}
	],
	"authenticatorConfig": [
		{
			"alias": "create unique user config",
			"config": {
				"require.password.update.after.registration": "false"
			}
		},
		{
			"alias": "review profile config",
			"config": {
				"update.profile.on.first.login": "missing"
			}
		}
	],
	"loginTheme": "school-theme",
	"accountTheme": "school-theme",
	"adminTheme": "school-theme",
	"registrationFlow": "rooms",
	"internationalizationEnabled": true,
	"supportedLocales": [
		"en",
		"it"
	],
	"defaultLocale": "it"
}
